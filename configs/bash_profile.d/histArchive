declare -a COMMAND_INSERT_STATUS_BUFF
MAX_BUFF_SIZE=20
HEAD=0
TAIL=0

buffer() {
    local cmd="$1"
    local entry="$2"
    case "$cmd" in
        add)
            COMMAND_INSERT_STATUS_BUFF[$HEAD]="$entry"
            HEAD=$(( (HEAD + 1) % MAX_BUFF_SIZE ))
            [ "$HEAD" -eq "$TAIL" ] \
                && TAIL=$(( (TAIL + 1) % MAX_BUFF_SIZE ))
            ;;
        peek)
            local last_idx=$(( (HEAD - 1 + MAX_BUFF_SIZE ) % MAX_BUFF_SIZE ))
            echo "${COMMAND_INSERT_STATUS_BUFF[$last_idx]}"
            ;;
        clear)
            COMMAND_INSERT_STATUS_BUFF=()
            HEAD=0
            TAIL=0
            ;;
        status)
            echo -e "HEAD: $HEAD\nTAIL: $TAIL\nMAX_BUFF_SIZE: $MAX_BUFF_SIZE\nContent:"
            local idx="$TAIL"
            while [ "$idx" -ne "$HEAD" ]; do
                echo "[$idx] ${COMMAND_INSERT_STATUS_BUFF[$idx]}"
                idx=$(( (idx + 1) % MAX_BUFF_SIZE ))
            done
            ;;
    esac
}

trap 'case "$BASH_COMMAND" in *) [ "$BASH_COMMAND" != "$PROMPT_COMMAND" ] && LAST_COMMAND="$BASH_COMMAND";; esac' DEBUG
archive_successful_cmd() {
    if [ $? -eq 0 ] && [ "$LAST_COMMAND" != "$(buffer peek)" ]; then
        INSERT_RESULT=$(perl "$HOME/bin/my-cmd2db-writer.pl" "$LAST_COMMAND")
        buffer add "$INSERT_RESULT"
        export COMMAND_INSERT_STATUS="$INSERT_RESULT"
    else
        export COMMAND_INSERT_STATUS="  "
    fi
}
PROMPT_COMMAND=archive_successful_cmd
